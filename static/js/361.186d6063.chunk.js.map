{"version":3,"file":"static/js/361.186d6063.chunk.js","mappings":"mPACA,EAAuB,qBAAvB,EAAoD,sB,SCMrC,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,SAWAC,EAAQ,WACZV,EAAS,IACTE,EAAY,KAGd,OACE,4BACE,gDAEA,UAACS,EAAA,EAAD,CAAMC,SAhBW,SAAAN,GACnBA,EAAMO,iBACNV,EAASW,EAAAA,EAAAA,MAAqB,CAAEf,MAAAA,EAAOE,SAAAA,KAEvCS,KAYgCK,UAAWC,EAAQC,aAAa,MAA9D,WACE,SAACN,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,iBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,2BAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,QACLX,KAAK,QACLC,MAAOV,EACPqB,SAAUf,UAKhB,SAACM,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,oBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,sBAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,WACLX,KAAK,WACLC,MAAOR,EACPmB,SAAUf,UAIhB,SAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAA/B","sources":["webpack://react-homework-template/./src/Views/SignIn/SignIn.module.css?df2d","Views/SignIn/SignIn.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignIn_form__BRuJ6\",\"label\":\"SignIn_label__MNiNh\"};","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport authOperations from '../../redux/auth/authOperations';\r\nimport s from '../SignIn/SignIn.module.css';\r\n\r\nexport default function SignIn() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Authorization page</h1>\r\n\r\n      <Form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label className={s.label}>\r\n            Email address\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label className={s.label}>\r\n            Password\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Sign in\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SignIn","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","name","value","reset","Form","onSubmit","preventDefault","authOperations","className","s","autoComplete","controlId","type","onChange","Button","variant"],"sourceRoot":""}